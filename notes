Option that reads all .fasta files in directory
Option that reads individual .fasta files

Parse each file line by line to get sequences
Capture length -- nucelotide or amino acid?
	How to calculate length (tbd):
		- Individual seq length
		- Aligned seq length (but gaps are included)
		- Length of total sig coocurance regions

How are the output files for the pValues?
How are the output files for the cooccurence data set?

Calculate %MinMax across co-occuring regions determined by significant pValues

Calculate %%Min across co-occuring regions with %MinMax values
	- Count # of %values below 0 divided by length (tbd)
	- Get %
----------------------------------------
6/19/14 -- Meeting with Scott

Look at runs to see if rare codon clusters (17 codon window) is conserved
	- Count how long runs are for sig orfs & non-sig
	- Create a histogram

Created ExtractSigOrf.cpp/.h
	- Takes in a sigOrf*.txt file
	- Checks if valid file
	- Parses file into vector of pairs that store organism name and seq #
	- Function to return seq # with organism name as argument

6/23/14
Created mmsort.cpp to create a copy of Aaron's .mm files but sorted numerical order
	- Useful for speed later down the pipeline
	- Can just iterate through the vector of sigOrfs once seq is found & calculated by just comparing string id's

6/24
Implemented ExtractMMSeq.cpp
	- Reads and parses minmax files into vector of id & seq pairs
Implemented RunLength.cpp
	- Counts min value runs and places in (non)sig-bins
	- The mmseq string has to be parsed into vector of ints
			- Convert string to int value
			- Use commas as delimiter

6/25
main.cpp
	- Traverses directory to get all files
	- Sorts vector of files
	- Sequentially calculates run lengths for each file
		- While comparing with signficant orfeomes
	- Fixed all memory leaks

6/26
Sum up all sig_runs and non_sig_runs
	- Go through each run vector and sum in vector<int>
	- Dynamically increases size of vectors (fixed seg faults)


	- Create a histogram of sig_runs and non_sig_runs (gnuplot?)
Adds all sig & non-sig runs for each sequence to a vector of sums. use vector to print to output file and create histogram on gnuplot.

6/27
Converted output to histograms

6/30
Meeting with Patricia, Julie, and Scott
	- Run analysis on masked data
	- Compute another analysis on # of occurences per %min value
	- Calculate avg cluster length
	- Find best fit equation
Attempted analysis on masked data--data format was not reasonable

7/1
Meeting with Scott
	- Calculate variance: sqrt((sum of all (val-avg)^2)/(N-1))
	- Run analysis on unmasked data: neglect first 50 amino acids for each sequence to resemble masked data set (more complex than that but for this project, this is sufficient)
Calculated average rare codon clust length in sigOrf_masked dir

7/2
Finished implementing script to calculate standard deviation
Prepared for presentation
Began implementing counting Min value occurences

7/3
Finished calculations for min value occurences
computed avg and std dev for min value occurences

7/7
Analyzed significant sequence lengths vs non-sig sequence lengths
T-Test to see whether the difference between the two group's average lengths is unlikely to have occurred because of random chance in sample selection
